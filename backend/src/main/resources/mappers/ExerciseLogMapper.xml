<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.ssafit.dao.ExerciseLogMapper">
    <insert id="insertExerciseLog" parameterType="ExerciseLog" useGeneratedKeys="true" keyProperty="exerciseLogId">
        INSERT INTO exercise_log (member_id, exercise_date, exercise_type, exercise_time, calories_burned, fat_burned)
        VALUES (#{memberId}, #{exerciseDate}, #{exerciseType}, #{exerciseTime}, #{caloriesBurned}, #{fatBurned});
    </insert>
    <resultMap id="exerciseDataMap" type="map">
        <result property="totalExerciseTime" column="totalExerciseTime" javaType="Double"/>
        <result property="totalCaloriesBurned" column="totalCaloriesBurned" javaType="Double"/>
        <result property="totalFatBurned" column="totalFatBurned" javaType="Double"/>
    </resultMap>
    <select id="selectThisWeekExerciseData" parameterType="string" resultMap="exerciseDataMap">
        SELECT
        ROUND(IFNULL(SUM(exercise_time), 0.0), 2) AS totalExerciseTime,
        ROUND(IFNULL(SUM(calories_burned), 0.0), 2) AS totalCaloriesBurned,
        ROUND(IFNULL(SUM(fat_burned), 0.0), 2) AS totalFatBurned
        FROM
        exercise_log
        WHERE
        member_id = #{memberId}
        AND WEEK(exercise_date, 0) = WEEK(now(), 0)  -- 0: 주의 시작이 일요일
        AND YEAR(exercise_date) = YEAR(now())
    </select>

    <select id="selectLastWeekExerciseData" parameterType="string" resultMap="exerciseDataMap">
        SELECT
        ROUND(IFNULL(SUM(exercise_time), 0.0), 2) AS totalExerciseTime,
        ROUND(IFNULL(SUM(calories_burned), 0.0), 2) AS totalCaloriesBurned,
        ROUND(IFNULL(SUM(fat_burned), 0.0), 2) AS totalFatBurned
        FROM
        exercise_log
        WHERE
        member_id = #{memberId}
        AND YEARWEEK(exercise_date, 0) = YEARWEEK(NOW(), 0) - 1  -- 지난 주
    </select>

    <select id="selectOneExerciseLog" parameterType="Long" resultType="ExerciseLog">
        SELECT * FROM exercise_log WHERE exercise_log_id = #{exerciseLogId};
    </select>
    <select id="selectExerciseLogsByDate" parameterType="map" resultType="ExerciseLog">
        SELECT * FROM exercise_log WHERE member_id = #{memberId} AND DATE(exercise_date) = #{exerciseDate};
    </select>
    <select id="selectTotalExerciseTimeByDate" parameterType="map" resultType="int">
        SELECT IFNULL(SUM(exercise_time), 0.0) FROM exercise_log WHERE member_id = #{memberId} AND DATE(exercise_date) = #{exerciseDate}
    </select>
    <select id="selectTotalExerciseTimeByDateRange" parameterType="map" resultType="map">
        SELECT
        DATE_FORMAT(exercise_date, '%Y-%m-%d') AS exerciseDate, -- 날짜를 문자열로 변환
        COALESCE(SUM(exercise_time), 0) AS totalExerciseTime    -- 총 운동 시간 합계
        FROM
        exercise_log
        WHERE
        member_id = #{memberId}                                -- 특정 멤버 ID 조건
        AND exercise_date BETWEEN #{startDate} AND #{endDate}   -- 1년 범위 내
        GROUP BY
        DATE(exercise_date)
        ORDER BY
        DATE(exercise_date) ASC;
    </select>

    <delete id="deleteExerciseLog" parameterType="map">
        DELETE FROM exercise_log WHERE exercise_log_id = #{exerciseLogId};
    </delete>
</mapper>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.ssafit.dao.MemberMapper">

    <!-- INSERT: 회원 추가 -->
    <insert id="insertMember" parameterType="Member">
        INSERT INTO members (member_id, name, nickname, password, role, created_at)
        VALUES (#{memberId}, #{name}, #{nickname}, #{password}, #{role}, now());
    </insert>

    <!-- SELECT: 특정 회원의 비밀번호 조회 -->
    <select id="findPasswordByMemberId" parameterType="string" resultType="string">
        SELECT password
        FROM members
        WHERE member_id = #{memberId};
    </select>

    <!-- SELECT: 특정 회원 정보 조회 -->
    <select id="findByMemberId" parameterType="string" resultType="Member">
        SELECT
        member_id AS memberId,
        name,
        nickname,
        profile_img AS profileImg,
        role,
        weight
        FROM members
        WHERE member_id = #{memberId};
    </select>

    <!-- UPDATE: 회원 정보 수정 -->
    <update id="updateMember" parameterType="Member">
        UPDATE members
        SET
        password = #{password},
        nickname = #{nickname},
        profile_img = #{profileImg},
        weight = #{weight}
        WHERE member_id = #{memberId};
    </update>

    <update id="updateWeight" parameterType="Member">
        UPDATE members
        SET
        weight = #{weight}
        WHERE member_id = #{memberId};
    </update>

    <!-- DELETE: 특정 회원 삭제 -->
    <delete id="deleteByMemberId" parameterType="string">
        DELETE FROM members
        WHERE member_id = #{memberId};
    </delete>

    <!-- SELECT: 회원 존재 여부 확인 -->
    <select id="existsByMemberId" parameterType="string" resultType="boolean">
        SELECT CASE
        WHEN EXISTS (SELECT 1 FROM members WHERE member_id = #{memberId})
        THEN TRUE
        ELSE FALSE
        END;
    </select>

</mapper>

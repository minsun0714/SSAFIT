CREATE DATABASE ssafit;
USE ssafit;

CREATE TABLE IF NOT EXISTS members (
    member_id VARCHAR(20) PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    nickname VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    profile_img VARCHAR(255),
    role ENUM('ROLE_ADMIN', 'ROLE_USER') NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE IF NOT EXISTS exercise_log (
    exercise_log_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    member_id VARCHAR(50) NOT NULL, -- 회원 ID
    exercise_date DATE NOT NULL, -- 운동 날짜
    exercise_type VARCHAR(50) NOT NULL, -- 운동 유형 (근력 또는 유산소)
    exercise_time DOUBLE NOT NULL, -- 운동 시간 (분)
    calories_burned DOUBLE NOT NULL, -- 소모된 칼로리
    fat_burned DOUBLE NOT NULL, -- 소모된 지방량 (g)
    FOREIGN KEY (member_id) REFERENCES members(member_id) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE IF NOT EXISTS video (
    video_id VARCHAR(255) NOT NULL PRIMARY KEY,     -- videoId, Primary key로 설정
    channel_title VARCHAR(255) NOT NULL,            -- channelTitle
    title VARCHAR(255) NOT NULL,                    -- title
    view_count BIGINT,                              -- viewCount
    published_at DATETIME,                          -- publishedAt
    part VARCHAR(255),                              -- part (예: Enum 형태로 처리 시 적절한 데이터 타입 사용)
    video_status VARCHAR(255),                      -- videoStatus (Enum 타입일 경우 적절한 데이터 타입 사용)
    member_id VARCHAR(255),                         -- memberId
    rating DOUBLE,                                  -- rating
    introduce_text TEXT,                            -- introduceText
    description TEXT                                -- description
);

CREATE TABLE IF NOT EXISTS review (
    review_id VARCHAR(255) NOT NULL PRIMARY KEY,
    member_id VARCHAR(255) NOT NULL,
    video_id VARCHAR(255) NOT NULL,
    content TEXT,
    rating DOUBLE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (member_id) REFERENCES members(member_id) ON DELETE CASCADE,
    FOREIGN KEY (video_id) REFERENCES video(video_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review (
    review_id VARCHAR(255) NOT NULL PRIMARY KEY,
    member_id VARCHAR(255) NOT NULL,
    video_id VARCHAR(255) NOT NULL,
    content TEXT,
    rating DOUBLE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (member_id) REFERENCES members(member_id) ON DELETE CASCADE,
    FOREIGN KEY (video_id) REFERENCES video(video_id) ON DELETE CASCADE
);